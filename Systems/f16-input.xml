<?xml version="1.0"?>
<PropertyList>
	<mice n="0">
		<mouse n="0">
			<mode n="0">
				<button n="3">
					<binding n="0">
						<script></script>
					</binding>
					<binding n="1">
						<condition>
							<and>
								<property>/devices/status/mice/mouse[0]/button[2]</property>
								<not><property>/sim/mouse/right-button-mode-cycle-enabled</property></not>
							</and>
						</condition>
						<command>nasal</command>
						<script>f16.fovZoom(-1);</script>
					</binding>
				</button>
				<button n="4">
					<binding n="0">
						<script></script>
					</binding>
					<binding n="1">
						<condition>
							<and>
								<property>/devices/status/mice/mouse[0]/button[2]</property>
								<not><property>/sim/mouse/right-button-mode-cycle-enabled</property></not>
							</and>
						</condition>
						<command>nasal</command>
						<script>f16.fovZoom(1);</script>
					</binding>
				</button>
			</mode>
		</mouse>
    </mice>
    <keyboard n="0">
        <key n="356">
            <name>Left</name>
            <repeatable type="bool">false</repeatable>
            <desc>slew</desc>
            <binding>
                <command>property-assign</command>
                <property>controls/displays/cursor-slew-x</property>
                <value type="int">-1</value>
            </binding>
            <mod-ctrl>
                <binding>
                    <command>property-assign</command>
                    <property>controls/displays/display-management-switch-x</property>
                    <value type="int">-1</value>
                </binding>
            </mod-ctrl>
            <mod-up>
                <binding>
                    <command>property-assign</command>
                    <property>controls/displays/cursor-slew-x</property>
                    <value type="int">0</value>
                </binding>
                <binding>
                    <command>property-assign</command>
                    <property>controls/displays/display-management-switch-x</property>
                    <value type="int">0</value>
                </binding>
            </mod-up>
        </key>

        <key n="358">
            <name>Right</name>
            <repeatable type="bool">false</repeatable>
            <desc>slew</desc>
            <binding>
                <command>property-assign</command>
                <property>controls/displays/cursor-slew-x</property>
                <value type="int">1</value>
            </binding>
            <mod-ctrl>
                <binding>
                    <command>property-assign</command>
                    <property>controls/displays/display-management-switch-x</property>
                    <value type="int">1</value>
                </binding>
            </mod-ctrl>
            <mod-up>
                <binding>
                    <command>property-assign</command>
                    <property>controls/displays/cursor-slew-x</property>
                    <value type="int">0</value>
                </binding>
                <binding>
                    <command>property-assign</command>
                    <property>controls/displays/display-management-switch-x</property>
                    <value type="int">0</value>
                </binding>
            </mod-up>
        </key>

        <key n="357">
            <name>Up</name>
            <repeatable type="bool">true</repeatable>
            <desc>slew</desc>
            <binding>
                <command>property-assign</command>
                <property>controls/displays/cursor-slew-y</property>
                <value type="int">-1</value>
            </binding>
            <mod-ctrl>
                <binding>
                    <command>property-assign</command>
                    <property>controls/displays/display-management-switch-y</property>
                    <value type="int">-1</value>
                </binding>
            </mod-ctrl>
            <mod-up>
                <binding>
                    <command>property-assign</command>
                    <property>controls/displays/cursor-slew-y</property>
                    <value type="int">0</value>
                </binding>
                <binding>
                    <command>property-assign</command>
                    <property>controls/displays/display-management-switch-y</property>
                    <value type="int">0</value>
                </binding>
            </mod-up>
        </key>

        <key n="359">
            <name>Down</name>
            <repeatable type="bool">true</repeatable>
            <desc>slew</desc>
            <binding>
                <command>property-assign</command>
                <property>controls/displays/cursor-slew-y</property>
                <value type="int">1</value>
            </binding>
            <mod-ctrl>
                <binding>
                    <command>property-assign</command>
                    <property>controls/displays/display-management-switch-y</property>
                    <value type="int">1</value>
                </binding>
            </mod-ctrl>
            <mod-up>
                <binding>
                    <command>property-assign</command>
                    <property>controls/displays/cursor-slew-y</property>
                    <value type="int">0</value>
                </binding>
                <binding>
                    <command>property-assign</command>
                    <property>controls/displays/display-management-switch-y</property>
                    <value type="int">0</value>
                </binding>
            </mod-up>
        </key>
		<key n="24">
			<name>Ctrl-x</name>
			<desc>Reset zoom to default</desc>
			<binding>
				<command>nasal</command>
				<script>f16.fovZoom(0);</script>
			</binding>
		</key>
		<key n="88">
			<name>X</name>
			<desc>Increase field of view</desc>
			<repeatable type="bool">true</repeatable>
			<binding>
				<command>nasal</command>
				<script>f16.fovZoom(1);</script>
			</binding>
		</key>
		<key n="120">
			<name>x</name>
			<desc>Decrease field of view</desc>
			<repeatable type="bool">true</repeatable>
			<binding>
				<command>nasal</command>
				<script>f16.fovZoom(-1);</script>
			</binding>
		</key>
        <key n="108">
            <name>l</name>
            <desc>cursor designate</desc>
            <binding>
                <command>property-assign</command>
                <property>controls/displays/cursor-click</property>
                <value type="bool">true</value>
            </binding>
            <mod-up>
                <binding>
                    <command>property-assign</command>
                    <property>controls/displays/cursor-click</property>
                    <value type="bool">false</value>
                </binding>
            </mod-up>
        </key>
        <key n="81">
            <name>Q</name>
            <desc>Reset view</desc>
            <binding>
                <command>nasal</command>
                <script>f16.resetView();</script>
            </binding>
        </key>
        <key n="80">
            <name>P</name>
            <desc>NOP panel here</desc>
            <binding>
                <command>nasal</command>
                <script>#Prevents 2D panel from activating</script>
            </binding>
        </key>
        <key n="17">
            <name>CTRL-Q</name>
            <desc>View head-down-displays</desc>
            <repeatable>false</repeatable>
            <binding>
                <command>nasal</command>
                <script>f16.HDDView();</script>
            </binding>
        </key>
        <key n="19">
            <name>CTRL-S</name>
            <desc>Ignore trolls</desc>
            <repeatable>false</repeatable>
            <binding>
                  <command>dialog-show</command>
                  <dialog-name>ignore</dialog-name>
            </binding>
        </key>
        
        <key n="23">
            <name>CTRL-W</name>
            <desc>View HSI</desc>
            <repeatable>false</repeatable>
            <binding>
                <command>nasal</command>
                <script>f16.HSIView();</script>
            </binding>
        </key>
         <key n="21">
          <name>Ctrl-U</name>
          <desc>[Cheat] Add 1000ft of emergency altitude</desc>
          <binding>
                <command>nasal</command>
                <script>
                    if (getprop("payload/armament/msg")==1) {
                        screen.log.write("CTRL-U disabled at the moment.");
                    } else {
                        setprop("position/altitude-ft", getprop("position/altitude-ft")+1000);
                        setprop("sim/startup/onground", 0);
                    }
                </script>
            </binding>
         </key>
         <key n="97">
          <name>a</name>
          <desc>Increase speed-up</desc>
            <binding n="3">
                <command>nasal</command>
                <condition>
                        <and>
                            <not-equals>
                                <property>sim/current-view/name</property>
                                <value>Walk View</value>
                            </not-equals>
                            <not-equals>
                                <property>sim/current-view/name</property>
                                <value>Walker Orbit View</value>
                            </not-equals>
                        </and>
                </condition>
                <script>
                    if (getprop("payload/armament/msg")==1) {
                        screen.log.write("Speed-up disabled at the moment.");
                    } else {
                        controls.speedup(1);
                    }
                </script>
            </binding>
         </key>
         <key n="100">
          <name>d</name>
          <desc>Dogfight mode</desc>
            <binding n="3">
                <command>nasal</command>
                <script>
                    var dg = getprop("f16/avionics/dgft");
                    dg = !dg;
                    setprop("f16/avionics/dgft", dg);
                    if (dg) {
                        setprop("instrumentation/radar/radar-standby-std", getprop("instrumentation/radar/radar-standby"));
                        setprop("instrumentation/radar/radar-standby", 1);
                        pylons.fcs.selectWeapon("20mm Cannon");
                        setprop("instrumentation/radar/radar2-range-std", getprop("instrumentation/radar/radar2-range"));
                        setprop("instrumentation/radar/radar2-range", 10);
                        setprop("instrumentation/radar/az-field-std", getprop("instrumentation/radar/az-field"));
                        setprop("instrumentation/radar/ho-field-std", getprop("instrumentation/radar/ho-field"));
                        setprop("instrumentation/radar/az-field", 30);
                        setprop("instrumentation/radar/ho-field", 20);
                        ded.dataEntryDisplay.page = ded.pEWS;
                        f16.f16_mfd.MFDl.resetColorAll();
                        f16.f16_mfd.MFDl.PFD.selectPage(f16.f16_mfd.MFDl.p_RDR);
                        f16.f16_mfd.MFDl.p_RDR.selectionBox.show();
                        f16.f16_mfd.MFDl.p_RDR.setSelection(nil, f16.f16_mfd.MFDl.PFD.buttons[10], 10);
                        f16.f16_mfd.MFDr.resetColorAll();
                        f16.f16_mfd.MFDr.PFD.selectPage(f16.f16_mfd.MFDr.p_WPN);
                        f16.f16_mfd.MFDr.p_WPN.selectionBox.show();
                        f16.f16_mfd.MFDr.p_WPN.setSelection(nil, f16.f16_mfd.MFDr.PFD.buttons[18], 18);
                        f16.rdrModeGM = 0;
                    } else {
                        setprop("instrumentation/radar/radar2-range", getprop("instrumentation/radar/radar2-range-std"));
                        setprop("instrumentation/radar/az-field", getprop("instrumentation/radar/az-field-std"));
                        setprop("instrumentation/radar/ho-field", getprop("instrumentation/radar/ho-field-std"));
                        setprop("instrumentation/radar/radar-standby", getprop("instrumentation/radar/radar-standby") and getprop("instrumentation/radar/radar-standby-std"));
                    }
                </script>
            </binding>
         </key>
          <key n="65">
          <name>A</name>
          <desc>Decrease speed-up</desc>
            <binding n="3">
                <command>nasal</command>
                <condition>
                    <and>
                    <not-equals>
                        <property>sim/current-view/name</property>
                        <value>Walk View</value>
                    </not-equals>
                    <not-equals>
                        <property>sim/current-view/name</property>
                        <value>Walker Orbit View</value>
                    </not-equals>
                    </and>
                </condition>
                <script>
                    if (getprop("payload/armament/msg")) {
                        screen.log.write("Speed-down disabled at the moment.");
                    } else {
                        controls.speedup(-1);
                    }
                </script>
            </binding>
         </key>
         <key n="18">
          <name>Ctrl-R</name>
          <desc>Activate the instant replay system</desc>
          <binding>
                <command>nasal</command>
                <script>
                    if (getprop("payload/armament/msg")==1) {
                        screen.log.write("Please do not use replay while in combat over MP!");
                    } else {
                        call(func{fgcommand('replay', props.Node.new({}))},nil,var err2 = []);
                        call(func{fgcommand('dialog-show', props.Node.new({"dialog-name": "replay"}))},nil,var err2 = []);
                    }
                </script>
            </binding>
            <mod-up>
            </mod-up>
         </key>
         <key n="112">
          <name>p</name>
          <desc>Toggle the pause state of the sim</desc>
          <binding>
                <command>nasal</command>
                <script>
                    if (getprop("payload/armament/msg")) {
                        screen.log.write("Please do not pause while in combat over MP!");
                    } else {
                        setprop("/sim/freeze/master", !getprop("/sim/freeze/master"));
                        setprop("/sim/freeze/clock", !getprop("/sim/freeze/clock"));
                        if (getprop("/sim/freeze/master")) {
                            screen.log.write("Sim is paused");
                        } else {
                            screen.log.write("Sim is resumed");
                        }
                    }
                </script>
          </binding>
        </key>
        <key n="87">
            <name>SHIFT-W</name>
            <desc>View RWR</desc>
            <repeatable>false</repeatable>
                <binding n="3">
                    <condition>
                            <and>
                            <not-equals>
                                <property>sim/current-view/name</property>
                                <value>Walk View</value>
                            </not-equals>
                            <not-equals>
                                <property>sim/current-view/name</property>
                                <value>Walker Orbit View</value>
                            </not-equals>
                            </and>
                     </condition>
                    <command>nasal</command>
                    <script>f16.RWRView();</script>
                </binding>
        </key>
        <key n="113">
            <name>q</name>
            <desc>Trigger flare release</desc>
            <binding>
                <command>property-assign</command>
                <property>/ai/submodels/submodel[0]/flare-release-cmd</property>
                <value type="bool">true</value>
            </binding>
            <mod-up>
                <binding>
                    <command>property-assign</command>
                    <property>/ai/submodels/submodel[0]/flare-release-cmd</property>
                    <value type="bool">false</value>
                </binding>
            </mod-up>
        </key>
        <key n="8">
            <name>Ctrl-H</name>
            <desc>Toggle arrester hook</desc>
            <binding>
                <command>property-toggle</command>
                <property>fdm/jsbsim/systems/hook/tailhook-cmd-norm</property>
                <condition>
                    <greater-than-equals>
                        <property>fdm/jsbsim/elec/bus/batt-2</property>
                        <value>20</value>
                    </greater-than-equals>
                </condition>
            </binding>
        </key>
        <key n="14">
            <name>Ctrl-n</name>
            <desc>Toggles Radar RWS / TWS AUTO Modes</desc>
            <binding>
                <command>nasal</command>
                <script>radar.radar_mode_toggle()</script>
            </binding>
        </key>
        <!--<key n="69">
         <name>E</name>
         <desc>Decrease Radar Range</desc>
         <binding>
          <command>nasal</command>
          <script>radar.radar_range_control(-1);</script>
         </binding>
        </key>-->
        <key n="67">
            <name>C</name>
            <desc>Toggle canopy</desc>
            <binding>
                <command>property-toggle</command>
                <property>/fdm/jsbsim/fcs/canopy-engage</property>
            </binding>
        </key>
        <!--<key n="82">
         <name>R</name>
         <desc>Increase Radar Range</desc>
         <binding>
          <command>nasal</command>
          <script>radar.radar_range_control(1);</script>
         </binding>
        </key>-->
        <key n="101">
            <name>e</name>
            <desc>Gun Trigger</desc>
            <binding>
                <command>property-assign</command>
                <property>controls/armament/trigger</property>
                <value>1</value>
            </binding>
            <mod-up>
                <binding>
                    <command>property-assign</command>
                    <property>controls/armament/trigger</property>
                    <value>0</value>
                </binding>
            </mod-up>
        </key>
        <key n="114">
            <name>r</name>
            <desc>Toggle radar standby mode</desc>
            <binding>
                <command>property-toggle</command>
                <property>instrumentation/radar/radar-standby</property>
            </binding>
            <binding>
                <command>nasal</command>
                <script>screen.log.write("Radar "~(getprop("instrumentation/radar/radar-standby")==1?"SILENT":"ACTIVE"), 0.5, 0.5, 1);#setprop("instrumentation/radar/radar-mode", (getprop("instrumentation/radar/radar-standby")==1?2:1));</script>
            </binding>
        </key>
        <key n="127">
            <name>Delete</name>
            <desc>Manual Pitch Override</desc>
            <binding>
                <command>property-toggle</command>
                <property>/fdm/jsbsim/fcs/fbw-override</property>
            </binding>
            <binding>
                <command>nasal</command>
                <script>screen.log.write("Manual Pitch Override "~(getprop("fdm/jsbsim/fcs/fbw-override")==1?"ON":"OFF"), 0.5, 0.5, 1);</script>
            </binding>
        </key>
        <key n="102">
            <name>f</name>
            <desc>Toggle refuel door</desc>
            <binding>
                <command>property-toggle</command>
                <property>systems/refuel/serviceable</property>
            </binding>
            <binding>
                <command>nasal</command>
                <script>screen.log.write("Refuel door "~(getprop("systems/refuel/serviceable")==1?"OPEN":"CLOSED"), 0.5, 0.5, 1);</script>
            </binding>
        </key>
        <key n="85">
            <name>U</name>
            <desc>Seat Down</desc>
            <binding>
                <command>property-adjust</command>
                <property>controls/seat/vertical-adjust</property>
                <step type="double">-0.005</step>
                <min type="double">-0.06</min>
                <max type="double">0.06</max>
                <condition>
                    <equals>
                        <property>sim/current-view/internal</property>
                        <value>true</value>
                    </equals>
                    <greater-than-equals>
                        <property>fdm/jsbsim/elec/bus/noness-ac-2</property>
                        <value>100</value>
                    </greater-than-equals>
                </condition>
            </binding>
            <binding>
                <condition>
                    <equals>
                        <property>sim/current-view/view-number</property>
                        <value>0</value>
                    </equals>
                    <greater-than-equals>
                        <property>fdm/jsbsim/elec/bus/noness-ac-2</property>
                        <value>100</value>
                    </greater-than-equals>
                </condition>
                <command>property-adjust</command>
                <property>sim/current-view/y-offset-m</property>
                <step type="double">-0.005</step>
                <min type="double">0.76</min>
                <max type="double">0.88</max>
                <!--<property>sim/current-view/z-offset-m</property>
                <step type="double">-0.0033</step>
                <min type="double">-4</min>
                <max type="double">-3.96</max>-->
            </binding>
        </key>
        <key n="117">
            <name>u</name>
            <desc>Seat Up</desc>
            <binding>
                <command>property-adjust</command>
                <property>controls/seat/vertical-adjust</property>
                <step type="double">0.005</step>
                <min type="double">-0.06</min>
                <max type="double">0.06</max>
                <condition>
                    <equals>
                        <property>sim/current-view/internal</property>
                        <value>true</value>
                    </equals>
                    <greater-than-equals>
                        <property>fdm/jsbsim/elec/bus/noness-ac-2</property>
                        <value>100</value>
                    </greater-than-equals>
                </condition>
            </binding>
            <binding>
                <condition>
                    <equals>
                        <property>sim/current-view/view-number</property>
                        <value>0</value>
                    </equals>
                    <greater-than-equals>
                        <property>fdm/jsbsim/elec/bus/noness-ac-2</property>
                        <value>100</value>
                    </greater-than-equals>
                </condition>
                <command>property-adjust</command>
                <property>sim/current-view/y-offset-m</property>
                <step type="double">0.005</step>
                <min type="double">0.76</min>
                <max type="double">0.88</max>
                <!--<property>sim/current-view/z-offset-m</property>
                <step type="double">0.0033</step>
                <min type="double">-4</min>
                <max type="double">-3.96</max>-->
            </binding>
        </key>
        <key n="121">
            <name>y</name>
            <desc>Next target select</desc>
            <binding>
                <command>property-assign</command>
                <property>sim/model/f16/instrumentation/radar-awg-9/select-target</property>
                <value>1</value>
            </binding>
        </key>
        <key n="89">
            <name>Y</name>
            <desc>Prev target select</desc>
            <binding>
                <command>property-assign</command>
                <property>sim/model/f16/instrumentation/radar-awg-9/select-target</property>
                <value>-1</value>
            </binding>
        </key>
        <key n="105">
            <name>i</name>
            <desc>Center target select</desc>
            <binding>
                <command>nasal</command>
                <script>awg_9.selectCenterTarget();</script>
            </binding>
        </key>
        <key n="25">
            <name>ctrl-y</name>
            <desc>Target deselect</desc>
            <binding>
                <command>nasal</command>
                <script>awg_9.active_u=nil;awg_9.active_u_callsign = nil;armament.contact = nil;</script>
            </binding>
        </key>
        <key n="82">
            <name>R</name>
            <desc>Increase Radar Range</desc>
            <binding>
                <command>nasal</command>
                <script>awg_9.range_control(1);screen.log.write("Radar range "~getprop("instrumentation/radar/radar2-range"), 0.5, 0.5, 1);</script>
            </binding>
        </key>
        <key n="69">
            <name>E</name>
            <desc>Decrease Radar Range</desc>
            <binding>
                <command>nasal</command>
                <script>awg_9.range_control(-1);screen.log.write("Radar range "~getprop("instrumentation/radar/radar2-range"), 0.5, 0.5, 1);</script>
            </binding>
        </key>
        <key n="119">
            <name>w</name>
            <desc>Cycle Weapon Type</desc>
            <binding n="2">
                <command>nasal</command>
                <condition>
                        <and>
                        <not-equals>
                            <property>sim/current-view/name</property>
                            <value>Walk View</value>
                        </not-equals>
                        <not-equals>
                            <property>sim/current-view/name</property>
                            <value>Walker Orbit View</value>
                        </not-equals>
                        </and>
                 </condition>
                <script>pylons.fcs.cycleLoadedWeapon();</script>
            </binding>
        </key>
        <key n="109">
            <name>m</name>
            <desc>Masterarm</desc>
            <binding>
                <command>nasal</command>
                <script><![CDATA[
                    var variantID = getprop("/sim/variant-id");
                    if ((variantID == 0 or variantID == 1 or variantID == 3) and getprop("controls/armament/master-arm") == 0 and getprop("controls/armament/master-arm-cover-open") == 0) {
                        setprop("controls/armament/master-arm-cover-open",1);
                        screen.log.write("Master-arm cover open.", 0.5, 0.5, 1);
                    } else {
                        setprop("controls/armament/master-arm",!getprop("controls/armament/master-arm"));
                        screen.log.write("Master-arm "~(getprop("controls/armament/master-arm")==0?"OFF":"ON"), 0.5, 0.5, 1);
                    }
                ]]></script>
            </binding>
        </key>
        <key n="83">
            <name>S</name>
            <desc>smoke</desc>
            <binding n="3">
                <command>property-toggle</command>
                <condition>
                        <and>
                        <not-equals>
                            <property>sim/current-view/name</property>
                            <value>Walk View</value>
                        </not-equals>
                        <not-equals>
                            <property>sim/current-view/name</property>
                            <value>Walker Orbit View</value>
                        </not-equals>
                        </and>
                 </condition>
                <property>controls/smoke</property>
            </binding>
            <binding n="4">
                <command>nasal</command>
                <condition>
                        <and>
                        <not-equals>
                            <property>sim/current-view/name</property>
                            <value>Walk View</value>
                        </not-equals>
                        <not-equals>
                            <property>sim/current-view/name</property>
                            <value>Walker Orbit View</value>
                        </not-equals>
                        </and>
                 </condition>
                <script>screen.log.write("Smoke "~(getprop("controls/smoke")==0?"OFF":"ON"), 0.5, 0.5, 1);</script>
            </binding>
        </key>
        <key n="262">
          <name>F6</name>
          <desc>noop</desc>
          <repeatable type="bool">false</repeatable>
          <binding>
           <command>nasal</command>
           <script>
            f16.eject();
           </script>
          </binding>
         </key>
         <key n="111">
          <name>o</name>
          <desc>Deploy Chute</desc>
          <repeatable type="bool">false</repeatable>
          <binding>
           <command>nasal</command>
           <script>
            f16.chute();
           </script>
          </binding>
         </key>
         <key n="79">
          <name>O</name>
          <desc>Release Chute</desc>
          <repeatable type="bool">false</repeatable>
          <binding>
           <command>nasal</command>
            <script>
            if (getprop("f16/chute/done")) {
                setprop("f16/chute/enable", 0);
                setprop("f16/chute/fold", 1);
                setprop("fdm/jsbsim/external_reactions/chute/magnitude", 0);
                f16.chuteRelease();
            }
            </script>
           </binding>
         </key>
         <!--<key n="261">
          <name>F5</name>
          <desc>noop</desc>
          <repeatable type="bool">false</repeatable>
          <binding>
                <command>dialog-show</command>
                <dialog-name>Ground_Targeting</dialog-name>
            </binding>
         </key>-->
         <key n="20">
            <name>Ctrl-t</name>
            <desc>Cycle Transponder modes</desc>
            <binding>
                <command>property-cycle</command>
                <property>/instrumentation/transponder/inputs/knob-mode</property>
                    <wrap>1</wrap>
                    <value>0</value><!-- OFF -->
                    <value>1</value><!-- STANDBY -->
                    <value>4</value><!-- ON  -->
            </binding>
            <binding>
                <command>nasal</command>
                <script>screen.log.write("Transponder "~(getprop("instrumentation/transponder/inputs/knob-mode")==0?"OFF":(getprop("instrumentation/transponder/inputs/knob-mode")==1?"STANDBY":"ON")), 0.5, 0.5, 1);</script>
            </binding>
        </key>
         <key n="49">
            <name>CTRL-1</name>
            <mod-ctrl>
                <desc>GCI pict</desc>
                <binding>
                    <command>property-assign</command>
                    <property>instrumentation/gci/picture</property>
                    <value>1</value>
                </binding>
            </mod-ctrl>
        </key>
        <key n="50">
            <name>CTRL-2</name>
            <mod-ctrl>
                <desc>GCI dope</desc>
                <binding>
                    <command>property-assign</command>
                    <property>instrumentation/gci/bogeydope</property>
                    <value>1</value>
                </binding>
            </mod-ctrl>
        </key>
        <key n="51">
            <name>CTRL-3</name>
            <mod-ctrl>
                <desc>GCI cutoff</desc>
                <binding>
                    <command>property-assign</command>
                    <property>instrumentation/gci/cutoff</property>
                    <value>1</value>
                </binding>
            </mod-ctrl>
        </key>
        <key n="52">
            <name>CTRL-4</name>
            <mod-ctrl>
                <desc>IFF interrogation</desc>
                <binding>
                    <command>property-assign</command>
                    <property>instrumentation/radar/iff</property>
                    <value>1</value>
                </binding>
            </mod-ctrl>
        </key>
    </keyboard>	
</PropertyList>